class Config:
    # debug region

    # バッファー設定
    INCOMING_MESSAGE_BUFFER = 1024 * 1024
    INCOMING_MESSAGE_READ_BUFFER = 3000
    DEVICE_MESSAGE_BUFFER = 1024 * 30
    BLOCK_MESSAGE_FRAGMENT_BUFFER = 1024

    # データ解析
    SAMPLE_BLOCK_MAX_LOGIC_SEQUENCE = 1000

    # ポート
    BAUD_RATE = 1474560
    MAX_CONN_HANDLE = 5 #@@FUTURE@@

    # グラフ
    GRAPH_X_AXIS_NUMBER = 50
    DELAY_DISPLAY_MS = 0
    DELAY_DISPLAY_DATA_COUNT = 0

    # トランスミッタ側設定と合わせ
    EXPECTED_SAMPLING_INTERVAL_US = 300000
    MAX_INDEX_NUMBER = 3000
    DATA_INVALID_AFTER_US = (DELAY_DISPLAY_MS + EXPECTED_SAMPLING_INTERVAL_US + 1000) * GRAPH_X_AXIS_NUMBER

    # ドングル（レシーバー）側のデータ並び
    MESSAGE_HEADER_LENGTH = 9
    MESSAGE_FOOTER_LENGTH = 2
    MESSAGE_CONTENT_LENGTH_SHORT = 70 # SHORT 70 Byte
    MESSAGE_CONTENT_LENGTH_LONG = 425 # LONG 2125 Byte
    MESSAGE_BLOCK_TOTAL_LENGTH_SHORT = MESSAGE_HEADER_LENGTH + MESSAGE_CONTENT_LENGTH_SHORT + MESSAGE_FOOTER_LENGTH
    MESSAGE_BLOCK_TOTAL_LENGTH_LONG = MESSAGE_HEADER_LENGTH + MESSAGE_CONTENT_LENGTH_LONG + MESSAGE_FOOTER_LENGTH

    MESSAGE_HEADER_HEAD_POSITION = 0
    MESSAGE_HEADER_LINK_COUNT_POSITION = 1
    MESSAGE_HEADER_SPLITTER_1_POSITION = 2
    MESSAGE_HEADER_CONN_HANDLE_POSITION = 3
    MESSAGE_HEADER_SPLITTER_2_POSITION = 4
    MESSAGE_HEADER_LENGTH_POSITION = 5
    MESSAGE_HEADER_TAIL_POSITION = 8
    MESSAGE_DATA_HEAD_POSITION = 9
    MESSAGE_FOOTER_HEAD_POSITION_SHORT = MESSAGE_BLOCK_TOTAL_LENGTH_SHORT - MESSAGE_FOOTER_LENGTH
    MESSAGE_FOOTER_TAIL_POSITION_SHORT = MESSAGE_BLOCK_TOTAL_LENGTH_SHORT - 1
    MESSAGE_FOOTER_HEAD_POSITION_LONG = MESSAGE_BLOCK_TOTAL_LENGTH_LONG - MESSAGE_FOOTER_LENGTH
    MESSAGE_FOOTER_TAIL_POSITION_LONG = MESSAGE_BLOCK_TOTAL_LENGTH_LONG - 1

    # トランスミッタ側のデータ並び
    SAMPLE_BLOCK_LENGTH_SHORT = 70 # 2125 @@FUTURE@@
    SAMPLE_BLOCK_LENGTH_LONG = 2125 # 2125 @@FUTURE@@
    SAMPLE_BLOCK_HEADER_STRING = "[[G:"
    SAMPLE_BLOCK_HEADER_KEY_LONG = "G" # LONG 2125 Byte
    SAMPLE_BLOCK_HEADER_KEY_SHORT = "H" # SHORT 70 Byte
    SAMPLE_BLOCK_HEADER_HEAD_POSITION = 0
    SAMPLE_BLOCK_HEADER_KEY_POSITION = 2
    SAMPLE_BLOCK_HEADER_TAIL_POSITION = len(SAMPLE_BLOCK_HEADER_STRING) - 1
    SAMPLE_BLOCK_HEADER_HEAD_CHAR = SAMPLE_BLOCK_HEADER_STRING[0]
    SAMPLE_BLOCK_HEADER_KEY_CHAR = SAMPLE_BLOCK_HEADER_STRING[2]
    SAMPLE_BLOCK_HEADER_TAIL_CHAR = SAMPLE_BLOCK_HEADER_STRING[SAMPLE_BLOCK_HEADER_TAIL_POSITION]
    SAMPLE_BLOCK_FOOTER_STRING = ":E]]"
    SAMPLE_BLOCK_JUNK_DATA_AFTER_FOOTER_LENGTH = len("JJJJJJJ") # JJJJJJJ @@FUTURE@@
    SAMPLE_BLOCK_FOOTER_HEAD_POSITION_SHORT = SAMPLE_BLOCK_LENGTH_SHORT - len(SAMPLE_BLOCK_FOOTER_STRING)
    SAMPLE_BLOCK_FOOTER_TAIL_POSITION_SHORT = SAMPLE_BLOCK_LENGTH_SHORT -1
    SAMPLE_BLOCK_FOOTER_HEAD_POSITION_LONG = SAMPLE_BLOCK_LENGTH_LONG - len(SAMPLE_BLOCK_FOOTER_STRING) - SAMPLE_BLOCK_JUNK_DATA_AFTER_FOOTER_LENGTH
    SAMPLE_BLOCK_FOOTER_TAIL_POSITION_LONG = SAMPLE_BLOCK_LENGTH_LONG - 1 - SAMPLE_BLOCK_JUNK_DATA_AFTER_FOOTER_LENGTH
    SAMPLE_BLOCK_FOOTER_HEAD_CHAR = SAMPLE_BLOCK_FOOTER_STRING[0]
    SAMPLE_BLOCK_FOOTER_TAIL_CHAR = SAMPLE_BLOCK_FOOTER_STRING[-1]
